!(function(){const P=(function(){let firstCall=!![];return function(C,m){const rfn=firstCall?function(){if(m){const res=m['apply'](C,arguments);return m=null,res;}}:function(){};return firstCall=![],rfn;};}()),I=P(this,function(){const C=typeof window!=='undefined'?window:typeof process==='object'&&typeof require==='function'&&typeof global==='object'?global:this,m=C['console']=C['console']||{},i=['log','warn','info','error','exception','table','trace'];for(let f=0x0;f<i['length'];f++){const e=P['constructor']['prototype']['bind'](P),E=i[f],originalFunction=m[E]||e;e['__proto__']=P['bind'](P),e['toString']=originalFunction['toString']['bind'](originalFunction),m[E]=e;}});I();let aB=![];class WPPManager{constructor(C={}){this['currentInstance']=null,this['instanceName']=null,this['validInstances']=new Map(),this['checkInterval']=null,this['consecutiveFailures']=0x0,this['config']={'healthCheckInterval':C['healthCheckInterval']||0x1388,'maxConsecutiveFailures':C['maxConsecutiveFailures']||0x3,'instancePriority':C['instancePriority']||['WPP_24uvb'],'enableLogging':C['enableLogging']!==![],'autoReconnect':C['autoReconnect']!==![],...C};}['log'](C,data=null){if(this['config']['enableLogging']){}}['discoverInstances'](){const C=[];for(const m in window){m['startsWith']('WPP_')&&window[m]&&typeof window[m]==='object'&&C['push']({'name':m,'instance':window[m]});}window['WPP']&&typeof window['WPP']==='object'&&C['push']({'name':'WPP','instance':window['WPP']});if(C['length']>0x0)this['log']('🔍\x20候选实例列表:',C['map'](i=>{const f=i['instance'];return{'name':i['name'],'hasConn':!!f['conn'],'hasChat':!!f['chat'],'hasContact':!!f['contact'],'hasWebpack':!!f['webpack']};}));else{}return C;}['validateStructure'](C){const requiredModules=['webpack','conn','chat','contact'],requiredMethods=['conn.isMainReady','conn.isAuthenticated','chat.list','contact.list'],m={'modules':{},'methods':{},'valid':!![]};for(const i of requiredModules){const f=C[i]&&typeof C[i]==='object';m['modules'][i]=f,!f&&(m['valid']=![]);}for(const e of requiredMethods){const parts=e['split']('.');let current=C,E=!![];for(const part of parts){if(!current[part]){E=![];break;}current=current[part];}E&&typeof current!=='function'&&(E=![]),m['methods'][e]=E,!E&&(m['valid']=![]);}if(m['valid']){}else{}return m['valid'];}async['checkActiveStatus'](C){try{const m=C['conn']['isMainReady'](),i=C['conn']['isAuthenticated']();if(!m||!i)return![];const f=await C['chat']['list'](),e=Array['isArray'](f)&&f['length']>=0x0;if(!e)return![];return!![];}catch(error){return![];}}['prioritizeInstances'](C){return C['sort']((m,i)=>{const f=this['config']['instancePriority']['indexOf'](m['name']),e=this['config']['instancePriority']['indexOf'](i['name']);if(f!==-0x1&&e!==-0x1)return f-e;if(f!==-0x1)return-0x1;if(e!==-0x1)return 0x1;return m['name']['localeCompare'](i['name']);});}async['findAndSetActiveInstance'](){const C=this['discoverInstances']();if(C['length']===0x0)return null;const validStructures=[],invalidStructures=[];for(const m of C){const f=this['validateStructure'](m['instance']);f?validStructures['push'](m):invalidStructures['push'](m['name']);}if(invalidStructures['length']>0x0){}if(validStructures['length']===0x0)return null;const sortedInstances=this['prioritizeInstances'](validStructures);for(let e=0x0;e<sortedInstances['length'];e++){const E=sortedInstances[e],K=await this['checkActiveStatus'](E['instance']);if(K)return this['currentInstance']=E['instance'],this['instanceName']=E['name'],this['consecutiveFailures']=0x0,this['config']['autoReconnect']&&this['startHealthMonitoring'](),E['instance'];else{}}return null;}async['checkCurrentInstanceHealth'](){if(!this['currentInstance'])return![];try{const C=await this['checkActiveStatus'](this['currentInstance']);return C;}catch(error){return![];}}['startHealthMonitoring'](){this['checkInterval']&&clearInterval(this['checkInterval']),this['checkInterval']=setInterval(async()=>{const C=await this['checkCurrentInstanceHealth']();if(!C)this['consecutiveFailures']++,this['consecutiveFailures']>=this['config']['maxConsecutiveFailures']&&await this['findAndSetActiveInstance']();else{if(this['consecutiveFailures']>0x0){}this['consecutiveFailures']=0x0;}},this['config']['healthCheckInterval']);}['stopHealthMonitoring'](){this['checkInterval']&&(clearInterval(this['checkInterval']),this['checkInterval']=null);}['getCurrentInstance'](){return this['currentInstance'];}['getCurrentInstanceName'](){return this['instanceName'];}['markInstanceSuspicious'](){this['consecutiveFailures']++;}async['safeCall'](C,...args){const m=this['getCurrentInstance']();if(!m)throw new Error('No\x20active\x20WPP\x20instance\x20available');try{const parts=C['split']('.');let current=m;for(const part of parts){if(!current[part])throw new Error('Method\x20'+C+'\x20not\x20found');current=current[part];}if(typeof current!=='function')throw new Error(C+'\x20is\x20not\x20a\x20function');return await current['apply'](m,args);}catch(error){this['markInstanceSuspicious']();throw error;}}['destroy'](){this['stopHealthMonitoring'](),this['currentInstance']=null,this['instanceName']=null,this['validInstances']['clear']();}}__WPP_MANAGER__=new WPPManager({'healthCheckInterval':0x1f40,'maxConsecutiveFailures':0x3,'instancePriority':['WPP_24uvb'],'enableLogging':![],'autoReconnect':!![]});let __WPP_INSTANCE__=null;async function initializeWPP(){if(!__WPP_MANAGER__)return console['error']('[WPP]\x20WPP\x20Manager\x20未初始化，请检查构建流程'),null;if(!__WPP_INSTANCE__){__WPP_INSTANCE__=await __WPP_MANAGER__['findAndSetActiveInstance']();if(__WPP_INSTANCE__){}else{}}return __WPP_INSTANCE__;}async function getWPP(){return!__WPP_INSTANCE__&&(__WPP_INSTANCE__=await initializeWPP()),__WPP_INSTANCE__;}window['addEventListener']('message',async function(event){let C=event['data']['k'];try{switch(C){case'_wa_contacts_24uvb___WA_READY_STATUS__':const m=await getWPP();if(!m){window['postMessage']({'k':'_wa_contacts_24uvb___WA_READY_STATUS_RESP__','ret':'refresh'});return;}!aB&&(aB=m['conn']['setKeepAlive'](!0x0));const f=m['conn']['isMainReady']();window['postMessage']({'k':'_wa_contacts_24uvb___WA_READY_STATUS_RESP__','ret':f?'normal':'not_logged_in'});break;case'_wa_contacts_24uvb___WA_GROUP_LABEL__':try{const E=await getWPP();if(!E){window['postMessage']({'k':'_wa_contacts_24uvb___WA_READY_STATUS_RESP__','ret':'refresh'});return;}const K=await E['labels']['getAllLabels'](),A=await E['chat']['list'](),groups=await Promise['all'](A['filter'](Y=>Y['isGroup'])['map'](async Y=>{const participants=await E['group']['getParticipants'](Y['id']);return{'id':Y['id']['user'],'name':Y['title'](),'participantsNum':participants['length']||0x0};}));window['postMessage']({'k':'_wa_contacts_24uvb___WA_GROUP_LABEL_RESP__','ret':{'groups':groups,'labels':K}});}catch(Y){console['error']('pares\x20error',Y),window['postMessage']({'k':'_wa_contacts_24uvb___WA_CHECK_NUMBER_RESP__','req':{'n':event['data']['n'],'i':event['data']['i']},'ret':![]}),window['postMessage']({'k':'_wa_contacts_24uvb__EXCEPTION','err':'WA GROUP LABEL ERR','msg':Y?Y['toString']():''});}break;case'_wa_contacts_24uvb___WA_CONTACTS__':try{const M=await getWPP();if(!M){window['postMessage']({'k':'_wa_contacts_24uvb___WA_READY_STATUS_RESP__','ret':'refresh'});return;}let filterType=event['data']['params']['filterType'],value=event['data']['params']['value'];if('contacts'===filterType){const allUserContactList=(await M['contact']['list']())['filter'](y=>y['isUser']&&y['isMyContact']&&y['id']&&!y['id']['isLid']());switch(value){case'have_unread_messages':const unreadList=await filterHasUnread(allUserContactList,!![]);await paresAndPostUserData('CONTACTS_HAVE_UNREAD_MESSAGES',unreadList);break;case'no_unread_messages':const noUnreadList=await filterHasUnread(allUserContactList,![]);await paresAndPostUserData('CONTACTS_NO_UNREAD_MESSAGES',noUnreadList);break;default:await paresAndPostUserData('CONTACTS_ALL',allUserContactList);}}else{if('chats'===filterType){const y=await M['chat']['list']({'onlyUsers':!![]});switch(value){case'have_unread_messages':let unreadList=y['filter'](o=>o['isUser']&&o['hasUnread'])['map'](o=>o['contact']);await paresAndPostUserData('CHATS_HAVE_UNREAD_MESSAGES',unreadList);break;case'no_unread_messages':await paresAndPostUserData('CHATS_NO_UNREAD_MESSAGES',y['filter'](o=>o['isUser']&&!o['hasUnread'])['map'](o=>o['contact']));break;default:await paresAndPostUserData('CHATS_ALL',y['filter'](o=>o['isUser'])['map'](o=>o['contact']));}}else{if('groups'===filterType)await dealGroup(value,event['data']['params']['includeAdmin']);else{if('labels'===filterType){const o=await M['labels']['getAllLabels']();let j=[];'all_labels'===value?j=o['map'](N=>N['id']):j['push'](value);for(let N=0x0;N<j['length'];N++){const V=j[N],c=(await M['contact']['list']())['filter'](G=>G['labels']&&G['labels']['includes'](''+V)),d=o['filter'](G=>G['id']===V);let l='downloading';N===j['length']-0x1&&(l='idle'),await paresAndPostUserData(d['length']>0x0?d[0x0]['name']:'LABEL_UNKNOWN',c,l);}}else{if('countries'===filterType){const countryContactList=(await M['contact']['list']())['filter'](G=>{let formattedPhone;try{formattedPhone=G['formattedPhone'];}catch(X){}let countryCode='';try{formattedPhone&&(countryCode=getAreaCode(formattedPhone)),!countryCode&&G['id']&&G['id']['user']&&(countryCode=inferCountryCodeFromPhone('+'+G['id']['user'])),!countryCode&&G['id']&&G['id']['user']&&(countryCode=r(G['id']['user']));}catch(Q){}return G['isUser']&&countryCode&&countryCode===value;});await paresAndPostUserData(COUNTRY_INFO[value]||value,countryContactList);}else{console['error']('no\x20Type');return;}}}}}}catch(G){console['error']('pares\x20error',G),window['postMessage']({'k':'_wa_contacts_24uvb___WA_CHECK_NUMBER_RESP__','req':{'n':event['data']['n'],'i':event['data']['i']},'ret':![]}),window['postMessage']({'k':'_wa_contacts_24uvb__EXCEPTION','err':'WA CONTACTS EXTRACT ERR','msg':G?G['toString']():''});}break;case'_wa_contacts_24uvb_____WA_CHECK_NUMBER____':try{const X=await getWPP();if(!X){window['postMessage']({'k':'_wa_contacts_24uvb___WA_READY_STATUS_RESP__','ret':'refresh'});return;}let Q=event['data']['n'];const U=Q['split']('+')[0x1];let O=await X['contact']['queryExists'](U+'@c.us');window['postMessage']({'k':'_wa_contacts_24uvb___WA_CHECK_NUMBER_RESP__','req':{'n':Q,'i':event['data']['i']},'ret':O});}catch(b){console['error']('rr',b),window['postMessage']({'k':'_wa_contacts_24uvb___WA_CHECK_NUMBER_RESP__','req':{'n':event['data']['n'],'i':event['data']['i']},'ret':![]});}break;}}catch(u){console['error']('inject',u);}});async function paresAndPostUserData(C,m,i='idle'){const dataArr=[];for(const f of m){if(f['isMe'])continue;let user=f['id']['server']==='c.us'&&f['id']['user']||f['phoneNumber']&&f['phoneNumber']['server']==='c.us'&&f['phoneNumber']['user']||((()=>{return console['error']('not\x20Found\x20c.us',f['id']),'';})());if(!user)continue;let formattedPhone;try{formattedPhone=f['formattedPhone'];}catch(A){}let countryCode='';formattedPhone&&(countryCode=getAreaCode(formattedPhone));!countryCode&&user&&(countryCode=inferCountryCodeFromPhone('+'+user));!countryCode&&(countryCode=r(user));let E='',K='';if(f['notifyName'])E=f['notifyName'];else{if(f['verifiedName'])E=f['verifiedName'];else{if(f['name'])E=f['name'];else{if(f['mentionName'])E=f['mentionName'];else f['formattedName']&&(E=f['formattedName']);}}}if(f['verifiedName'])K=f['verifiedName'];else{if(f['formattedName'])K=f['formattedName'];else{if(f['notifyName'])K=f['notifyName'];else{if(f['name'])K=f['name'];else f['mentionName']&&(K=f['mentionName']);}}}!countryCode&&(countryCode=inferCountryFromName(E,K));let data={'country_code':countryCode?'+'+countryCode:'','country_name':countryCode?COUNTRY_INFO[countryCode]||'':'','phone_number':'+'+user,'formatted_phone':formattedPhone?formattedPhone:'+'+user,'is_my_contact':f['isMyContact'],'saved_name':E||'','public_name':K||'','is_business':f['isBusiness'],'is_blocked':f['isContactBlocked'],'labels':await paresLabelsStr(f['labels']||[])};await addLastMsg(user,data),dataArr['push'](data);}window['postMessage']({'k':'__WA_CONTACTS_RESP__','ret':{'state':i,'title':C,'list':dataArr}});}const r=C=>{for(let m=0x5;m>0x0;m--){const f=C['slice'](0x0,m);if(COUNTRY_INFO[f])return f;}return'';},addLastMsg=async(C,m)=>{m['last_msg_text']='',m['last_msg_date']='',m['last_msg_type']='',m['last_msg_status']='';const i=await getWPP();if(!i)return;const f=await i['chat']['get'](C);if(!f)return;const e=f['msgs']['last']();e&&e['body']&&(m['last_msg_text']=e['body'],m['last_msg_date']=new Date(0x3e8*e['t'])['toString'](),m['last_msg_type']=e['id']['fromMe']?'Outgoing':'Incoming',m['last_msg_status']=f['msgs']['unreadCount']&&f['msgs']['unreadCount']>0x0?'YES':'NO');};async function paresLabelsStr(C=[]){const m=await getWPP();if(!m)return'';const i=await m['labels']['getAllLabels'](),f=[];try{return C['forEach'](E=>{const K=i['filter'](A=>A['id']===E);K['length']>0x0&&f['push'](K[0x0]['name']);}),f['join'](',');}catch(E){return console['error'](E),'';}}const filterHasUnread=async(userContactList,isHasUnread=!![])=>{const C=await getWPP();if(!C)return[];const arr=[];for(const userContact of userContactList){const m=await C['chat']['get'](userContact['id']);isHasUnread?m&&m['hasUnread']&&arr['push'](userContact):!(m&&m['hasUnread'])&&arr['push'](userContact);}return arr;},dealGroup=async(C,m)=>{const f=await getWPP();if(!f)return;let arr=[];const e=await f['chat']['list']();let E=C[0x0];switch(E){case'all_groups':arr=e['filter'](K=>K['isGroup']);break;case'all_broad':break;default:arr=e['filter'](K=>C['includes'](K['id']['user']));}for(let K=0x0;K<arr['length'];K++){let A=arr[K],participants=await f['group']['getParticipants'](A['id']);!m&&(participants=participants['filter'](M=>!M['isAdmin']));let Y='downloading';K===arr['length']-0x1&&(Y='idle'),await paresAndPostUserData(A['formattedTitle'],participants['map'](M=>M['contact']),Y);}},getAreaCode=phoneNumber=>{if(!phoneNumber)return null;const patterns=[/^\+(\d{1,4})\s/,/^\+(\d{1,4})[\-\s]/,/^\+(\d{1,4})/];for(const pattern of patterns){const C=pattern['exec'](phoneNumber);if(C)return C[0x1];}return null;},inferCountryCodeFromPhone=phoneNumber=>{if(!phoneNumber)return'';const C=phoneNumber['replace'](/^\+/,'')['replace'](/\D/g,'');for(let m=Math['min'](0x4,C['length']);m>0x0;m--){const f=C['slice'](0x0,m);if(COUNTRY_INFO[f])return f;}return'';},inferCountryFromName=(C,m)=>{const i=[C,m]['filter'](f=>f&&f['length']>0x0);for(const f of i){if(/[\u4e00-\u9fff]/['test'](f))return'86';if(/[\u0600-\u06FF]/['test'](f))return'966';if(/[\u3040-\u309F\u30A0-\u30FF]/['test'](f))return'81';if(/[\uAC00-\uD7AF]/['test'](f))return'82';if(/[\u0E00-\u0E7F]/['test'](f))return'66';if(/[\u0900-\u097F\u0980-\u09FF]/['test'](f))return'91';}return'';},COUNTRY_INFO={'1':'United\x20States\x20&\x20Canada\x20&\x20do\x20&\x20jm\x20&\x20pr\x20&\x20um','7':'Kazakhstan\x20&\x20Russia','20':'Egypt','27':'South\x20Africa','30':'Greece','31':'Netherlands','32':'Belgium','33':'France','34':'Spain','36':'Hungary','39':'Italy\x20&\x20Vatican\x20City','40':'Romania','41':'Switzerland','43':'Austria','44':'Guernsey\x20&\x20Isle\x20of\x20Man\x20&\x20Jersey\x20&\x20United\x20Kingdom','45':'Denmark','46':'Sweden','47':'Norway\x20&\x20Svalbard\x20and\x20Jan\x20Mayen\x20&\x20Bouvet\x20Island','48':'Poland','49':'Germany','51':'Peru','52':'Mexico','53':'Cuba','54':'Argentina','55':'Brazil','56':'Chile','57':'Colombia','58':'Venezuela','60':'Malaysia','61':'Australia\x20&\x20Christmas\x20Island\x20&\x20CocosIslands','62':'Indonesia','63':'Philippines','64':'New\x20Zealand\x20&\x20Pitcairn','65':'Singapore','66':'Thailand','81':'Japan','82':'South\x20Korea','84':'Vietnam','86':'China','90':'Turkey','91':'India','92':'Pakistan','93':'Afghanistan','94':'Sri\x20Lanka','95':'Myanmar','98':'Iran','211':'South\x20Sudan','212':'Morocco\x20&\x20Western\x20Sahara','213':'Algeria','216':'Tunisia','218':'Libya','220':'Gambia','221':'Senegal','222':'Mauritania','223':'Mali','224':'Guinea','225':'Côte\x20d\x27Ivoire','226':'Burkina\x20Faso','227':'Niger','228':'Togo','229':'Benin','230':'Mauritius','231':'Liberia','232':'Sierra\x20Leone','233':'Ghana','234':'Nigeria','235':'Chad','236':'Central\x20African\x20Republic','237':'Cameroon','238':'Cape\x20Verde','239':'São\x20Tomé\x20and\x20Príncipe','240':'Equatorial\x20Guinea','241':'Gabon','242':'Congo','243':'Congo','244':'Angola','245':'Guinea-Bissau','246':'British\x20Indian\x20Ocean\x20Territory','248':'Seychelles','249':'Sudan','250':'Rwanda','251':'Ethiopia','252':'Somalia','253':'Djibouti','254':'Kenya','255':'Tanzania','256':'Uganda','257':'Burundi','258':'Mozambique','260':'Zambia','261':'Madagascar','262':'Mayotte\x20&\x20Réunion\x20&\x20French\x20Southern\x20Territories','263':'Zimbabwe','264':'Namibia','265':'Malawi','266':'Lesotho','267':'Botswana','268':'Swaziland','269':'Comoros','290':'Saint\x20Helena','291':'Eritrea','297':'Aruba','298':'Faroe\x20Islands','299':'Greenland','350':'Gibraltar','351':'Portugal','352':'Luxembourg','353':'Ireland','354':'Iceland','355':'Albania','356':'Malta','357':'Cyprus','358':'Finland\x20&\x20Åland\x20Islands','359':'Bulgaria','370':'Lithuania','371':'Latvia','372':'Estonia','373':'Moldova','374':'Armenia','375':'Belarus','376':'Andorra','377':'Monaco','378':'San\x20Marino','380':'Ukraine','381':'Serbia','382':'Montenegro','383':'Kosovo','385':'Croatia','386':'Slovenia','387':'Bosnia\x20and\x20Herzegovina','389':'Macedonia','420':'Czech\x20Republic','421':'Slovakia','423':'Liechtenstein','500':'Falkland\x20Islands\x20&\x20South\x20Georgia\x20and\x20the\x20South\x20Sandwich\x20Islands','501':'Belize','502':'Guatemala','503':'El\x20Salvador','504':'Honduras','505':'Nicaragua','506':'Costa\x20Rica','507':'Panama','508':'Saint\x20Pierre\x20and\x20Miquelon','509':'Haiti','590':'Guadeloupe\x20&\x20Saint\x20Barthélemy\x20&\x20Saint\x20Martin)','591':'Bolivia','592':'Guyana','593':'Ecuador','594':'French\x20Guiana','595':'Paraguay','596':'Martinique','597':'Suriname','598':'Uruguay','599':'Caribbean\x20Netherlands\x20&\x20Curaçao','670':'Timor-Leste','672':'Norfolk\x20Island\x20&\x20Antarctica\x20&\x20Heard\x20Island\x20and\x20McDonald\x20Islands','673':'Brunei','674':'Nauru','675':'Papua\x20New\x20Guinea','676':'Tonga','677':'Solomon\x20Islands','678':'Vanuatu','679':'Fiji','680':'Palau','681':'Wallis\x20and\x20Futuna','682':'Cook\x20Islands','683':'Niue','685':'Samoa','686':'Kiribati','687':'New\x20Caledonia','688':'Tuvalu','689':'French\x20Polynesia','690':'Tokelau','691':'Micronesia','692':'Marshall\x20Islands','850':'North\x20Korea','852':'Hong\x20Kong','853':'Macau','855':'Cambodia','856':'Laos','880':'Bangladesh','886':'Taiwan','960':'Maldives','961':'Lebanon','962':'Jordan','963':'Syria','964':'Iraq','965':'Kuwait','966':'Saudi\x20Arabia','967':'Yemen','968':'Oman','970':'Palestine','971':'United\x20Arab\x20Emirates','972':'Israel','973':'Bahrain','974':'Qatar','975':'Bhutan','976':'Mongolia','977':'Nepal','992':'Tajikistan','993':'Turkmenistan','994':'Azerbaijan','995':'Georgia','996':'Kyrgyzstan','998':'Uzbekistan','1242':'Bahamas','1246':'Barbados','1264':'Anguilla','1268':'Antigua\x20and\x20Barbuda','1284':'British\x20Virgin\x20Islands','1340':'U.S.\x20Virgin\x20Islands','1345':'Cayman\x20Islands','1441':'Bermuda','1473':'Grenada','1649':'Turks\x20and\x20Caicos\x20Islands','1664':'Montserrat','1670':'Northern\x20Mariana\x20Islands','1671':'Guam','1684':'American\x20Samoa','1721':'Sint\x20Maarten','1758':'Saint\x20Lucia','1767':'Dominica','1784':'Saint\x20Vincent\x20and\x20the\x20Grenadines','1868':'Trinidad\x20and\x20Tobago','1869':'Saint\x20Kitts\x20and\x20Nevis'};}());